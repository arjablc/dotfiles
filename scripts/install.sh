
#!/bin/bash
# generated by gpt
#
#
#
#Check if yay is is_installed
check_yay() {
  if command -v yay &> /dev/null; then
    echo "yay is already installed. Exiting."
    return 0
  else 
    return 1
  fi
}

# List of packages you want to check
packages=(
  "brightnessctl"
  "waybar"
  "hyprshot"
  "kvantum"
  "hypridle"
  "nwg-look"
  "swww"
	"mako"
  "wallust"
  "rofi-wayland"
  "wlogout"
  "bluez"
  "blueman"
  "pavucontrol"
  "pamixer"
  "wl-clipboard"
  "tmux"
  "ttf-cascadia-code-nerd"
  "otf-font-awesome"
)
install_yay_deps () {
  echo "Installing yay dependencies"
  sudo pacman -S --needed --noconfirm git base-devel
}
install_yay () {
  echo "cloning remote yay repo"
  git clone https://aur.archlinux.org/yay.git
  cd yay
  echo "building yay"
  makepkg -si --noconfirm
  cd ..
  rm -rf ./yay
}

# Function to check if a package is installed
is_installed() {
    pacman -Q "$1" &> /dev/null
}

# Function to install a package using pacman or yay
install_package() {
    # First try using pacman
    if ! is_installed "$1"; then
        echo "$1 is not installed. Installing..."
        # Try to install with pacman first
        sudo pacman -Sy --noconfirm --needed "$1" || \
        # If pacman fails, try yay
        yay -Sy --noconfirm --needed "$1" || \
        echo "Failed to install $1"
    else
        echo "$1 is already installed, skipping installation."
    fi
}

if check_yay; then
  echo "YAY is already installed, YAY!!"
else 
  install_yay_deps
  install_yay

fi


# Iterate over the list of packages and install if necessary
for pkg in "${packages[@]}"; do
    install_package "$pkg"
done
